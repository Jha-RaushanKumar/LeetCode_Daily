import java.util.* ;
import java.io.*; 
public class Queue {
    
    int start;
    int arr[];
    int end;
    int size;

    Queue() {
        // Implement the Constructor
        start = -1;
        end = -1;
        arr = new int[100000];
        size = 0;
    }

    /*----------------- Public Functions of Queue -----------------*/

    boolean isEmpty() {
        // Implement the isEmpty() function
        if(size==0){
            return true;
        }
        else{
            return false;
        }
    }

    void enqueue(int data) {
        // Implement the enqueue() function
        if(end==-1){
            start = 0;
            end = 0;
        }
        else{
            end=end+1;
            
            
        }
        size++;
        arr[end]=data;
        
    }

    int dequeue() {
        // Implement the dequeue() function
        if(start == -1){
            return -1;
        }
        int x = arr[start];
        if(size ==1){
            start = -1;
            end = -1;
        }
        else{
            start = start+1;
            
        }
        size--;
        return x;
    }

    int front() {
        // Implement the front() function
        if(start==-1){
            return -1;
        }
        else{
            return arr[start];
        }
    }
    
    int size(){
        return size;
    }

}
